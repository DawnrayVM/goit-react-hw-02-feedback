{"version":3,"sources":["Components/FeedbackOption.jsx","Components/Notification.jsx","Components/Statistics.jsx","Components/Section.jsx","Components/Feedback.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","title","fontFamily","fontSize","textAlign","container","display","justifyContent","alignContent","margin","right","left","feedbackButton","fontWeight","color","textDecoration","userSelect","padding","outline","border","borderRadius","background","transition","boxShadow","FeedbackOption","onLeaveFeedback","options","children","classes","feedbackBtns","map","option","idx","type","className","onClick","name","slice","toUpperCase","concat","length","Notification","message","width","top","flexDirection","Statistics","good","neutral","bad","total","positivePercentage","msgStyle","style","Section","Feedback","state","props","initialGood","initialNeutral","initialBad","initialTotal","initialPositivePercentage","handleIncrement","e","target","setState","prevState","countTotal","countPositivePercentage","this","Number","toFixed","Object","keys","Component","defaultProps","counts","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4519187.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    title: {\r\n        fontFamily: 'Roboto',\r\n        fontSize: 18,\r\n        textAlign: 'center',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignContent: 'flex-start',\r\n        margin: {\r\n            right: 'auto',\r\n            left: 'auto',\r\n        },\r\n        '& button': {\r\n            '&:not(:last-child)': { margin: { right: 10 } },\r\n        },\r\n    },\r\n    feedbackButton: {\r\n        display: 'inline-block',\r\n        fontFamily: 'arial, sans-serif',\r\n        fontSize: 10,\r\n        fontWeight: 'bold',\r\n        color: 'rgb(68, 68, 68)',\r\n        textDecoration: 'none',\r\n        userSelect: 'none',\r\n        padding: '.2em 1.2em',\r\n        outline: 'none',\r\n        border: '1px solid rgba(0, 0, 0, .1)',\r\n        borderRadius: 2,\r\n        background: 'rgb(245, 245, 245) linear-gradient(#f4f4f4, #f1f1f1)',\r\n        transition: 'all .218s ease 0s',\r\n        '&:hover': {\r\n            color: 'rgb(24, 24, 24)',\r\n            border: '1px solid rgb(198, 198, 198)',\r\n            background: '#f7f7f7 linear-gradient(#f7f7f7, #f1f1f1)',\r\n            boxShadow: '0 1px 2px rgba(0, 0, 0, .1)',\r\n        },\r\n        '&:active': {\r\n            color: 'rgb(51,51,51)',\r\n            border: '1px solid rgb(204,204,204)',\r\n            background:\r\n                'rgb(238, 238, 238) linear-gradient(rgb(238, 238, 238), rgb(224, 224, 224))',\r\n            boxShadow: '0 1px 2px rgba(0, 0, 0, .1) inset',\r\n        },\r\n    },\r\n});\r\n\r\nconst FeedbackOption = ({ onLeaveFeedback, options, children }) => {\r\n    const classes = useStyles();\r\n    const feedbackBtns = options.map(\r\n        (option, idx) =>\r\n            idx <= 2 && (\r\n                <button\r\n                    key={option}\r\n                    type=\"button\"\r\n                    className={classes.feedbackButton}\r\n                    onClick={onLeaveFeedback}\r\n                    name={option}\r\n                >\r\n                    {option\r\n                        .slice(0, 1)\r\n                        .toUpperCase()\r\n                        .concat(option.slice(1, option.length))}\r\n                </button>\r\n            ),\r\n    );\r\n    return (\r\n        <>\r\n            <h2 className={classes.title}>Please leave your feedback</h2>\r\n            <section className={classes.container}>{feedbackBtns}</section>\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FeedbackOption;\r\n","const Notification = ({ message }) => <span>{message}</span>;\r\nexport default Notification;\r\n","import { createUseStyles } from 'react-jss';\r\nimport Notification from './Notification';\r\n\r\nconst useStyles = createUseStyles({\r\n    container: {\r\n        textAlign: 'start',\r\n        width: 200,\r\n        margin: {\r\n            right: 'auto',\r\n            left: 'auto',\r\n            top: 10,\r\n        },\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n});\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    const classes = useStyles();\r\n    const msgStyle = { textAlign: 'center' };\r\n    return good || neutral || bad ? (\r\n        <div className={classes.container}>\r\n            <h2 style={msgStyle}>Statistics</h2>\r\n            <span className=\"counter\">Good: {good}</span>\r\n            <span className=\"counter\">Neutral: {neutral}</span>\r\n            <span className=\"counter\">Bad: {bad}</span>\r\n            <span className=\"counter\">Total: {total}</span>\r\n            <span className=\"counter\">\r\n                {' '}\r\n                Positive feedback: {positivePercentage}%\r\n            </span>\r\n        </div>\r\n    ) : (\r\n        <div className={classes.container} style={msgStyle}>\r\n            <Notification message=\"No feedback given\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n    container: {\r\n        fontFamily: 'Roboto',\r\n        textAlign: 'center',\r\n        padding: '0px 15px',\r\n        margin: {\r\n            right: 'auto',\r\n            left: 'auto',\r\n        },\r\n    },\r\n});\r\n\r\nconst Section = ({ title, children }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        title && (\r\n            <section className={classes.container}>\r\n                <h1>{title}</h1>\r\n                {children}\r\n            </section>\r\n        )\r\n    );\r\n};\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FeedbackOption from './FeedbackOption';\r\nimport Statistics from './Statistics';\r\nimport Section from './Section';\r\n\r\nclass Feedback extends Component {\r\n    static defaultProps = {\r\n        initialGood: 0,\r\n        initialNeutral: 0,\r\n        initialBad: 0,\r\n        initialTotal: 0,\r\n        initialPositivePercentage: 0,\r\n    };\r\n\r\n    static propTypes = {\r\n        initialGood: PropTypes.number,\r\n        initialNeutral: PropTypes.number,\r\n        initialBad: PropTypes.number,\r\n        initialTotal: PropTypes.number,\r\n        initialPositivePercentage: PropTypes.number,\r\n    };\r\n\r\n    static counts = {\r\n        total: 0,\r\n        positivePercentage: 0,\r\n    };\r\n\r\n    state = {\r\n        good: this.props.initialGood,\r\n        neutral: this.props.initialNeutral,\r\n        bad: this.props.initialBad,\r\n        total: this.props.initialTotal,\r\n        positivePercentage: this.props.initialPositivePercentage,\r\n    };\r\n\r\n    handleIncrement = e => {\r\n        const name = e.target.name;\r\n        this.setState(prevState => ({ [name]: prevState[name] + 1 }));\r\n        this.countTotal();\r\n        this.countPositivePercentage();\r\n    };\r\n\r\n    countTotal() {\r\n        this.setState(prevState => {\r\n            return {\r\n                total: prevState.good + prevState.neutral + prevState.bad,\r\n            };\r\n        });\r\n    }\r\n\r\n    countPositivePercentage() {\r\n        this.setState(prevState => {\r\n            return {\r\n                positivePercentage: Number(\r\n                    (\r\n                        ((prevState.good + prevState.neutral) * 100) /\r\n                        prevState.total\r\n                    ).toFixed(2),\r\n                ),\r\n            };\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Section title=\"Feedback Widget\">\r\n                <FeedbackOption\r\n                    options={Object.keys(this.state)}\r\n                    onLeaveFeedback={this.handleIncrement}\r\n                />\r\n                <Statistics\r\n                    good={this.state.good}\r\n                    neutral={this.state.neutral}\r\n                    bad={this.state.bad}\r\n                    total={this.state.total}\r\n                    positivePercentage={this.state.positivePercentage}\r\n                />\r\n            </Section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Feedback;\r\n","import Feedback from './Components/Feedback';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Feedback />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}